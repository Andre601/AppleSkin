plugins {
	id 'fabric-loom' version '0.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
group = project.maven_group

minecraft {
}

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.resources.srcDirs += 'resources'

repositories {
    maven { url "https://maven.shedaniel.me/" }
	mavenLocal()
    mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
	include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"
}

processResources {
	inputs.property "vars", project.version
	from(sourceSets.main.resources.srcDirs) {
		include '**/fabric.mod.json'
		expand 'version':project.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude '**/fabric.mod.json'
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

task apiJar(type: Jar, dependsOn: classes) {
	classifier = "api"
 	from sourceSets.main.output
 	include "squeek/appleskin/api/**"
}

jar {
	from "LICENSE"
}

artifacts {
 	archives sourcesJar
 	archives apiJar
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar.archivePath) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
